apiVersion: apps/v1
kind: Deployment
metadata:
  name: git-sync-sidecar
  namespace: argocd # Replace with your namespace
spec:
  replicas: 1
  selector:
    matchLabels:
      app: git-sync
  template:
    metadata:
      labels:
        app: git-sync
    spec:
      securityContext:
        fsGroup: 33 # Group ID for www-data (Nginx user)
      containers:
      - name: git-sync
        image: registry.k8s.io/git-sync/git-sync:v3.6.1
        env:
        - name: GIT_SYNC_REPO
          value: "https://github.com/MidoriAppleCore/pubsitetest.git"
        - name: GIT_SYNC_BRANCH
          value: "main"
        - name: GIT_SYNC_ROOT
          value: "/tmp/git-sync" # Temporary directory for git-sync
        - name: GIT_SYNC_DEST
          value: "repo" # Sync to a subdirectory called "repo"
        - name: GIT_SYNC_WAIT
          value: "30"
        volumeMounts:
        - mountPath: /tmp/git-sync
          name: git-sync-volume
      - name: content-mover
        image: busybox
        command: ["/bin/sh", "-c"]
        args:
        - |
          while true; do
            if [ -d "/tmp/git-sync/repo" ] && [ "$(ls -A /tmp/git-sync/repo)" ]; then
              rm -rf /usr/share/nginx/html/*
              cp -R /tmp/git-sync/repo/* /usr/share/nginx/html/
              echo "Content copied to Nginx directory"
              sleep 60
            else
              echo "Waiting for git-sync to complete..."
              sleep 5
            fi
          done
        volumeMounts:
        - mountPath: /tmp/git-sync
          name: git-sync-volume
        - mountPath: /usr/share/nginx/html
          name: web-content
      volumes:
      - name: git-sync-volume
        emptyDir: {}
      - name: web-content
        persistentVolumeClaim:
          claimName: git-sync-pvc